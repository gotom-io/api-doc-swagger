openapi: 3.0.0
info:
  version: 4.4.7
  title: goTom Campaign API

x-explorer-enabled: false # this disables the "try me" button for test requests on readme.com

paths:
  /app-api/primary-keys/{entity}:
    get:
      tags: [Primary-Keys]
      summary: Get a list of goTom primary keys with names
      description: > 
        Get a list of goTom primary keys with associated names to the provided entity.
        The primary keys provided here are needed in other calls like to create CampaignFlight.
        It contains pagination after a 1000 max result limit. E-mail field is displayed only if user entity is requested.
      parameters:
        - in: path
          name: entity
          description: This is the entity name. Typically if looking for say, 'tarifId', the entity is called 'tarif'. And the `id` value returned is what one would enter as `tarifId`.
          schema:
            type: string
            enum:
              - user
              - tarif
              - priceType
              - adServer
              - campaignType
              - extraPriceLevel
              - platform
              - channel
              - media
              - advertising
              - flightPositionType
          required: true
        - in: query
          name: page
          description: From 1 to the last page number found in the pagination part of the response.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Returns pagination, items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimaryKeysRead'
        '422':
          description: Invalid entity provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
                        example: "'tarifffff' is not a valid entity. Valid entities are: 'user','adServer','tarif','priceType','campaignType','extraPriceLevel','platform','channel','media','advertising'"
  /app-api/campaign:
    post:
      tags: [Campaign]
      summary: Create a campaign
      description:
        Create the campaign by its external ID. Flights that will be created on this campaign will have the agency or intermediator commission as well discounts applied to them.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignCreate'
      responses:
        '201':
          description: Campaign has been created
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected
             * `1f06b2d7-49b4-4b8b-aa66-5172aeb01e97` - The externalId is already in use
             * `5658b9ca-ce50-4a98-a0da-97d9361845e3` - An invalid ID field has been given (for example the `entityId`
               in the customer object could not be found), here you have to refer to the `propertyPath` value to
               find out which property caused the error
             * `8d6a458b-362a-4b13-b3bb-fe0772a4fc7e` - If you have supplied a currency which is not configured for
               your goTom instance you will get this error
             * `6b3befbc-2f01-4ddf-be21-b57898905284` - If a dynamic expression constraint failed. Check the error message for further info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'

  /app-api/campaign/{campaignExternalId}:
    parameters:
      - $ref: '#/components/parameters/ParamCampaignExternalId'
    get:
      tags: [Campaign]
      summary: Retrieve a campaign
      responses:
        '200':
          description: Return the campaign data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignRead'
        '404':
          description: Campaign has not been found

    post:
      tags: [Campaign]
      summary: Update a campaign
      description: |
        All the properties are optional, only the supplied properties are changed.
        
        Notice that when changing the customer, it will apply the new customer discounts automatically. 
        
        When changing or setting agency/intermediator, by default, commissions will be set to the values found in the agency/intermediator again. Even if the commission was set on the flight. Updating agency/intermediator to `null` will, by default, set the commissions to `0` and the `commissionStatus` as well to `0`.
        
        When agency/intermediator are sent in the body and you don't want to update the commissions you can use the query parameter `update_commissions=0`.
      parameters:
        - in: query
          name: update_commissions
          schema:
            type: boolean
            default: 1
            enum: [ 0, 1 ]
          description: >
            Whether to update commissions or not
             * **0**: commissions will not be updated and stay the same even if agency and/or intermediator are changed. Flights created hereafter will use the old commissions.
             * **1**: commissions will be updated only if the payload as well has values set for the intermediator or agency. Flights created hereafter will always use those commissions as well. If you have set custom flight commissions manually on flights, they will be reset to the values of the agency/intermediator.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignUpdate'
      responses:
        '204':
          description: Campaign has been updated
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected
             * `5658b9ca-ce50-4a98-a0da-97d9361845e3` - An invalid ID field has been given (for example the `entityId`
               in the customer object could not be found), here you have to refer to the `propertyPath` value to
               find out which property caused the error
             * `fa0401a7-6720-44dd-b443-2389aab8c8b7` - Cannot change campaign status from booking to reservation because flights were already invoiced in this campaign.
             * `b31b973d-8238-467c-bf01-1e9a4ded9631` - Cannot change campaign customer because flights were already invoiced in this campaign.
             * `ec75ef78-1db7-4469-a7fc-b14a71e5dbee` - Cannot change campaign agency  because flights were already invoiced in this campaign.
             * `9e8d02a8-f693-4df3-869e-a16d196d9d8a` - Cannot change campaign intermediator  because flights were already invoiced in this campaign.
             * `800b5cad-7f13-4b27-b3d6-74fa3c47b4e1` - Cannot change campaign currency  because flights were already invoiced in this campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'

  /app-api/campaign/{campaignExternalId}/flight:
    parameters:
      - $ref: '#/components/parameters/ParamCampaignExternalId'
    post:
      tags: [CampaignFlight]
      summary: Create a new flight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightCreate'
      responses:
        '201':
          description: Flight has been created
        '404':
          description: The campaign does not exist
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected
             * `1f06b2d7-49b4-4b8b-aa66-5172aeb01e97` - The externalId is already in use
             * `5658b9ca-ce50-4a98-a0da-97d9361845e3` - An invalid ID field has been given (for example the `platformId`
               in the customer object could not be found), here you have to refer to the `propertyPath` value to
               find out which property caused the error
             * `e3a1d7f7-4fcf-4b7d-8d87-38a60126462f` - The combination of `platformId`, `channelId` and `advertisingId` does not exist
             * `409d70bf-376e-4a21-a8d0-f75a4a6a7abc` - There is no price entry found for the combination of `platformId`, `channelId`, `advertisingId`, `tarifId`, `extraPriceLevelId` and `priceTypeId` does not exist
             * `3d3b78ef-1595-47a3-b85d-20a5ee9a873c` - Flight is already fully invoiced
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'

  /app-api/campaign/{campaignExternalId}/flight-lineitemid/{flightExternalId}:
    get:
      tags: [CampaignFlight]
      summary: Retrieve a flight LineItem IDs and Strategy IDs
      parameters:
        - in: path
          name: campaignExternalId
          schema:
            type: string
          required: true
        - in: path
          name: flightExternalId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Return the adserver strategyId and lineitemid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightLineItemId'
        '404':
          description: Flight has not been found

  /app-api/campaign/{campaignExternalId}/flight/{flightExternalId}:
    parameters:
      - $ref: '#/components/parameters/ParamCampaignExternalId'
      - $ref: '#/components/parameters/ParamFlightExternalId'
    get:
      tags: [CampaignFlight]
      summary: Retrieve a flight
      responses:
        '200':
          description: Return the campaign data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightRead'
        '404':
          description: Flight has not been found
    post:
      tags: [CampaignFlight]
      summary: Update the flight
      description: Update the flight. All the properties are optional, only the supplied properties are changed.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightUpdate'
      responses:
        '204':
          description: Flight has been updated
        '404':
          description: The campaign does not exist
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected
             * `5658b9ca-ce50-4a98-a0da-97d9361845e3` - An invalid ID field has been given (for example the `platformId`
               in the customer object could not be found), here you have to refer to the `propertyPath` value to
               find out which property caused the error
             * `e3a1d7f7-4fcf-4b7d-8d87-38a60126462f` - The combination of `platformId`, `channelId` and `advertisingId` does not exist
             * `409d70bf-376e-4a21-a8d0-f75a4a6a7abc` - There is no price entry found for the combination of `platformId`, `channelId`, `advertisingId`, `tarifId`, `extraPriceLevelId` and `priceTypeId` does not exist
             * `24a9375a-0b22-4676-9a29-9c9e7f2c195f` - The adServerId provided in the KeyValueSet is invalid
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'

    delete:
      tags: [CampaignFlight]
      summary: Delete a flight
      responses:
        '204':
          description: Flight has been deleted
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected
            
            
            Campaign errors:
               * `60e2547e-bac4-4738-bcfc-6b38fa847a16` - Delete failed because campaign is already archived.
               * `1b97b080-933c-40df-8768-e08473736005` - Campaign does not have the status 'reservation' and therefore flights cannot be deleted.
            
            
            Flight errors:  
               * `cc8b37d1-8c9f-491e-aaf4-05510935b492` - Delete failed because flight is already invoiced.
               * `ac23616c-a625-47b4-9e58-909c66df5f6d` - Flight already has ad server data and therefore cannot be deleted.
               * `8665dee6-e755-4904-9df4-93ef5bd64d29` - Flight already has deferred data and therefore cannot be deleted.
               * `33042bd6-05f3-4691-ba27-4f5cef93f697` - Flight already has publisher payouts and therefore cannot be deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationResponse'
        '404':
          description: Flight has not been found

  /app-api/campaign/{campaignExternalId}/campaign-discount:
    parameters:
      - $ref: '#/components/parameters/ParamCampaignExternalId'
    get:
      tags: [CampaignDiscount]
      summary: Retrieve campaign discounts and their flight discounts
      description: |
        Retrieves campaign discounts and their associated flight discounts for a specific campaign.
      responses:
        '200':
          description: Campaign discounts and flight discounts have been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDiscountsRead'
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'
    post:
      tags: [CampaignDiscount]
      summary: Create a campaign discount
      description: A reason for a campaign discount is to e.g. be able to collect all flight discounts to a single column in finance documents.
      responses:
        '201':
          description: Campaign discount has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDiscountWrite'
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected errors:
               * `450ae979-312c-45b9-b61a-dfcde745b8e7` - Cannot create campaign discount with an external id that is already in use. Campaign discount external id: "{{ campaignDiscountExternalId }}" is already in use in campaign with external id "{{ campaignExternalId }}". Use update instead or use a different external id.
               * `0e31a231-9575-4430-8ab2-937bbd9e771d` - Flight with external ID '{{ flightExternalId }}' is already partly invoiced.
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'
  /app-api/campaign/{campaignExternalId}/campaign-discount/{cDiscountEID}:
    parameters:
      - $ref: '#/components/parameters/ParamCampaignExternalId'
      - $ref: '#/components/parameters/ParamCampaignDiscountExternalId'
    patch:
      tags: [CampaignDiscount]
      summary: Update a campaign discount
      responses:
        '204':
          description: Campaign discount has been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    description: This name will appear e.g. in finance documents
                    type: string
                    example: "Great discount for john doe"
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected errors:
               * `504d6c75-bacb-4319-ad0a-e942a30904f7` - Fehler: Delta-Rechnung vorhanden. (Kampagne: #{{ campaignInternalId }})
               * `fb5f05f4-ee4e-41a9-9370-14415bdc12ea` - Fehler: min. 1 Flight ist bereits fakturiert.
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'
    delete:
      tags: [CampaignDiscount]
      summary: Delete a campaign discount
      responses:
        '204':
          description: Campaign discount has been deleted.
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected errors:
               * `d4c8a1b5-7492-4c65-833f-d3473dd76854` - Cannot delete a campaign discount that still has active flight discounts. Delete the flight discounts first. Flight discounts: {{ flightDiscountIdentifiers }}
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'

  /app-api/campaign/{campaignExternalId}/campaign-discount/{cDiscountEID}/flight-discount:
    parameters:
      - $ref: '#/components/parameters/ParamCampaignExternalId'
      - $ref: '#/components/parameters/ParamCampaignDiscountExternalId'
    post:
      tags: [CampaignDiscount]
      summary: Create a flight discount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightDiscountCreate'
      responses:
        '204':
          description: Flight discount has been created.
        '404':
          description: A flight does not exist with that external id.
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected:
             * `b3b2187f-b34a-489e-ae7e-e171e7776bd4` - Neither amountPercent nor amountSum was specified, need to set at least one
             * `5268ee13-0ad7-4393-a4be-6e17fbeb9569` - Flight discount cannot set both percentage and amount - send only one.
             * `504d6c75-bacb-4319-ad0a-e942a30904f7` - Error: Delta-Invoice exists
             * `fb5f05f4-ee4e-41a9-9370-14415bdc12ea` - Error: At least one Flight has already been invoiced.
             * `586bec40-0170-4a20-81a3-328afcef65a5` - Flight discount external id: "exampleExternalId1" is already in use with flight with external id "exampleExternalId2".
             * `0e31a231-9575-4430-8ab2-937bbd9e771d` - Flight with external ID 'exampleExternalId' is already partly invoiced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationResponse'
        '501':
          $ref: '#/components/responses/SumUpCaseNotImplemented'
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'

  /app-api/campaign/{campaignExternalId}/campaign-discount/{cDiscountEID}/flight-discount/{fDiscountEID}:
    parameters:
      - $ref: '#/components/parameters/ParamCampaignExternalId'
      - $ref: '#/components/parameters/ParamCampaignDiscountExternalId'
      - $ref: '#/components/parameters/ParamFlightDiscountExternalId'

    get:
      tags: [CampaignDiscount]
      summary: Read a flight discount
      description: Read a flight discount of a flight that was created via API and has an externalId
      responses:
        '200':
          description: Flight discount has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightDiscountRead'
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'

    patch:
      tags: [CampaignDiscount]
      summary: Update a flight discount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightDiscountUpdate'
      responses:
        '204':
          description: Flight discount has been updated
        '404':
          description: A flight discount does not exist with that external id.
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected:
             * `5268ee13-0ad7-4393-a4be-6e17fbeb9569` - Flight discount cannot set both percentage and amount - send only one.
             * `504d6c75-bacb-4319-ad0a-e942a30904f7` - Error: Delta-Invoice exists
             * `fb5f05f4-ee4e-41a9-9370-14415bdc12ea` - Error: At least one Flight has already been invoiced.
             * `bdba6ce3-3884-450d-a3b3-0e790ba2cbc8` - Flight discount external id: "exampleExternalId1" is already in use with flight with external id "exampleExternalId2".
             * `0e31a231-9575-4430-8ab2-937bbd9e771d` - Flight with external ID 'exampleExternalId' is already partly invoiced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationResponse'
        '501':
          $ref: '#/components/responses/SumUpCaseNotImplemented'
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'
    delete:
      tags: [CampaignDiscount]
      summary: Delete a flight discount
      responses:
        '204':
          description: Flight discount has been deleted
        '404':
          description: A flight discount does not exist with that external id.
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected:
             * `cfa53928-478d-4c37-b844-d0643be2b2b4` - Error: At least one Flight has already been invoiced.
             * `26415fc8-24d2-4cd7-8561-a62fe636f3c4` - Changes not allowed. Flight already deferred.
             * `0e31a231-9575-4430-8ab2-937bbd9e771d` - Flight with external ID 'exampleExternalId' is already partly invoiced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationResponse'
        '501':
          $ref: '#/components/responses/SumUpCaseNotImplemented'
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'


  /app-api/campaign/{campaignExternalId}/flight/{flightExternalId}/sublines:
    parameters:
      - $ref: '#/components/parameters/ParamCampaignExternalId'
      - $ref: '#/components/parameters/ParamFlightExternalId'
    get:
      tags: [CampaignFlightSubline]
      summary: Retrieve the flight's sublines
      description: Retrieve the flight's sublines. This endpoint only available if the marketer network module is active.
      responses:
        '200':
          description: Return the campaign data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightSublines'

        '404':
          description: Flight has not been found
    post:
      tags: [CampaignFlightSubline]
      summary: Create/Update the flight's sublines
      description: Create/Update the sublines for a flight. This endpoint only available if the marketer network module is active.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightSublines'
      responses:
        '204':
          description: Sublines have been updated
        '404':
          description: The campaign or flight does not exist
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected
             * `d368a263-4bd7-4f21-bccf-1188df46991c` - The `platformId` of the given subline does not belong to the network defined in the flight's `platformId`.
             * `3b254c3d-590c-4edc-b763-c49f5a703355` - The `percentage` values of all `sublines` do not add up to 100%
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'

  /app-api/campaign/{campaignExternalId}/document:
    parameters:
      - $ref: '#/components/parameters/ParamCampaignExternalId'
    post:
      tags: [Campaign]
      summary: Create a new campaign document
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '201':
          description: Document has been created
        '404':
          description: The campaign does not exist

  /app-api/campaign/{campaignExternalId}/archive-status:
    parameters:
      - $ref: '#/components/parameters/ParamCampaignExternalId'
    post:
      tags: [Campaign]
      summary: Set archive status of a campaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveStatus'
      responses:
        '204':
          description: Archive status was updated successfully
        '404':
          description: The campaign does not exist
        '400':
          description: >
            Returns a list of errors in the input data. For this call the following violation codes can be expected
             * `28a27691-46f0-4bc2-9806-100587d7a962` - The campaign was already billed, cannot archive / unarchive
             * `e0a1561a-631e-4d1b-99fe-6a7e7f89b4dd` - The campaign was partially invoiced, cannot archive
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'
  
  /app-api/campaign/{campaignExternalId}/commission-status:
      parameters:
          - $ref: '#/components/parameters/ParamCampaignExternalId'
      post:
          tags: [Campaign]
          summary: Set the commission status of a campaign
          requestBody:
              content:
                  application/json:
                      schema:
                          $ref: '#/components/schemas/CommissionStatus'
          responses:
              '204':
                  description: Commission status was updated successfully
              '404':
                  description: The campaign does not exist
              '400':
                  description: >
                      Returns a list of errors in the input data. For this call the following violation codes can be expected
                       * `48f7f665-0181-431c-a094-d6a09842690f` - Cannot change commission because flights were already invoiced in this campaign
                       * `9bf0acca-73cf-448f-8907-bc70ae240b16` - The provided commission status value is invalid
                       * `16a35de8-46dd-454d-9150-b11280782ff9` - Changes not allowed. Flight already deferred
              '500':
                  $ref: '#/components/responses/InternalServerErrorDefault'
  
  /app-api/campaign/{campaignExternalId}/flight/{flightExternalId}/commission:
      parameters:
          -   $ref: '#/components/parameters/ParamCampaignExternalId'
          -   $ref: '#/components/parameters/ParamFlightExternalId'
      get:
          tags: [ CampaignFlight ]
          summary: Retrieve the flight's commission
          responses:
              '200':
                  description: Returns the commission data
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/FlightCommission'
              
              '404':
                  description: Flight has not been found
      post:
          tags: [CampaignFlight]
          summary: Set the flight's commission
          description: |
            Careful: Updating the campaign with a new agency/intermediator or with the same agency/intermediator will recalculate the commissions of that agency/intermediator and overwrite the flight commission set here.
            
            Read details in the update campaign endpoint.
          requestBody:
              content:
                  application/json:
                      schema:
                          $ref: '#/components/schemas/FlightCommission'
          responses:
              '204':
                  description: Commission was updated successfully
              '404':
                  description: The campaign does not exist
              '400':
                  description: >
                    Returns a list of errors in the input data. For this call the following violation codes can be expected
                      * `6e40c9b1-7f75-4a3a-8149-26adecd9a5d4` - Commission update failed: Please provide either a percentage or amount for the commissions but not both
                      * `504d6c75-bacb-4319-ad0a-e942a30904f7` - Error: Delta-Invoice exists
                      * `407eebae-cb0c-49fd-9708-4312452133ee` - Cannot change commission because flight is already invoiced
              '500':
                  $ref: '#/components/responses/InternalServerErrorDefault'

  /app-api/customer/{customerCrmExternalId}:
    parameters:
      -   $ref: '#/components/parameters/ParamCustomerExternalCrmId'
    get:
      tags: [Customer]
      summary: Retrieve a customer
      description:
        Retrieves a customer data object including it's default discounts. For writing a customer you should look inside the GoTom CRM Sync API.
      responses:
        '200':
          description: Customer has been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFoundResponse'
        '404':
          description: >
            No Customer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoCustomerFoundResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorDefault'

components:
  schemas:
    ContactRef: # if you update this, be sure to update the equivalent in the other yaml files
      description: This entity represents either a customer, agency, intermediator or publisher, either the external ID or the external CRM ID or the goTom ID can be set
      type: object
      nullable: true
      properties:
        entityId:
          description: ID of the entity (might be a customer, agency, intermediator of publisher) for this contact (corresponds to the "Kunde", "Vermittler", "Agentur" field)
          type: integer
        entityExternalId:
          description: External ID of the entity (might be a customer, agency, intermediator of publisher) for this contact (corresponds to the "Kunde", "Vermittler", "Agentur" field)
          type: string
        entityExternalCrmId:
          description: External CRM ID of the entity (might be a customer, agency, intermediator of publisher) for this contact (corresponds to the "Kunde", "Vermittler", "Agentur" field)
          type: string
        addressId:
          description: ID of the address for this contact (corresponds to the "Adresse" field in the UI)
          type: integer
          nullable: true
        addressExternalId:
          description: External ID of the address for this contact (corresponds to the "Adresse" field in the UI)
          type: string
          nullable: true
        addressExternalCrmId:
          description: External CRM ID of the address for this contact (corresponds to the "Adresse" field in the UI)
          type: string
          nullable: true
        personId:
          description: ID of the person for this contact (corresponds to the "Kontakt" field)
          type: integer
          nullable: true
        personExternalId:
          description: External ID of the person for this contact (corresponds to the "Kontakt" field)
          type: string
          nullable: true
        personExternalCrmId:
          description: External CRM ID of the person for this contact (corresponds to the "Kontakt" field)
          type: string
          nullable: true


    CustomerRead: # if you update this, be sure to update as well the other yaml files (there its called Customer)
      description: Customer Object
      type: object
      additionalProperties: false
      required: [ externalCrmId, externalId, firm, mwst, note, status, statusEc, language, bankAccountNumber, bankIBANNumber, bankClearingNumber, bankName, searchstring, vatType, softDeleted, commission, industry, addresses, mainAddress, contacts, tags, references, consultants, paymentTerm ]
      properties:
        defaultDiscounts: # this is currently not in customer write
          description: List of default discounts for the customer
          type: array
          items:
            type: object
            additionalProperties: false
            required: [ name, percent ]
            properties:
              name:
                type: string
                example: Friendly Discount 1
              percent:
                type: number
                format: float
                example: 12.25
        externalCrmId:
          description: External CRM Id for referencing the customer, the important ID of the CRM sync API.
          type: string
          nullable: true
        externalId:
          description: Not to be confused with externalCrmId, externalId is not important for the CRM sync API. It could be used to reference again something else.
          type: string
          nullable: true
        firm:
          description: Name of the customer
          type: string
        mwst:
          description: VAT Number
          type: string
          nullable: true
        note:
          description: Note on the client
          type: string
        status:
          description: States if the customer is active or inactive. 1 = active, 0 = inactive
          type: integer
          enum: [ 1, 0 ]
        statusEc:
          description: Customer type. 1 = Customer, 2 = Intermediator, 3 = Agency, 5 = Publisher (Only available with marketer module activated)
          type: integer
          enum: [ 1, 2, 3, 5 ]
        language:
          description: Preferred language for this customer
          type: string
          enum: [ de, en, fr, it ]
        bankAccountNumber:
          description: Bank Account Number for this customer
          type: string
          nullable: true
        bankIBANNumber:
          description: IBAN for this customer
          type: string
          nullable: true
        bankClearingNumber:
          description: Bank Clearing for this customer
          type: string
          nullable: true
        bankName:
          description: Bank name for this customer
          type: string
          nullable: true
        searchstring:
          description: Search help to find this customer easier with other name(s)
          type: string
          nullable: true
        vatType:
          description: VAT Type (0 = Standard, 2 = VAT exempt, 3 = VAT reduced, 7 = VAT exempt embassy)
          type: integer
          default: 0
          enum: [ 0, 2, 3, 7 ]
        softDeleted:
          description: If this customer should be treated as deleted.
          example: false
          type: boolean
          default: false
        commission:
          description: Defines the default commissions for an agency or intermediator. Has no effect on statusEc != 2 or 3.
          type: object
          additionalProperties: false
          required: [ bkCommission, vmkCommission, type ]
          properties:
            bkCommission:
              description: Agency Commission aka BK (Beraterkommission) aka AP (Agenturprovision) in percent
              type: number
            vmkCommission:
              description: Intermediator Commission aka VMK (Vermittlerkommission) aka DBE (Direktbuchungsentschädigung) aka 2. Provision aka 2. Agentur-Provision in percent
              type: number
            type:
              description: |
                Type of commission. 
                0 = Standard (default) = bkCommission direct / vmkCommission direct
                2 = bkCommission direct / vmkCommission indirect (Accrual / Rückstellung)
                3 = bkCommission separate / vmkCommission indirect (Accrual / Rückstellung)
                4 = vmkCommission separate
              type: integer
              enum: [ 0, 2, 3, 4 ]
        industry:
          description: Customer industry
          type: object
          nullable: true
          additionalProperties: false
          required: [ externalCrmId, name ]
          properties:
            externalCrmId:
              description: External CRM Id for referencing the industry
              type: string
              nullable: true
            name:
              description: Name of the industry
              type: string
        addresses:
          description: Customer addresses. Addresses added through this endpoint are merged with existing ones (upsert). Deleting existing addresses is not supported.
          type: array
          items:
            type: object
            additionalProperties: false
            required: [ externalCrmId, title, firm, department, street, number, addresstext, zip, place, country, externalId, sendingRule, sendingRuleAddresses, softDeleted, ]
            properties:
              externalCrmId:
                description: External CRM Id for referencing the address
                type: string
              title:
                description: Name/Label
                type: string
              firm:
                description: Company
                type: string
              department:
                description: Departement
                type: string
              street:
                description: Street
                type: string
              number:
                description: Street number
                type: string
              addresstext:
                description: Addition
                type: string
              zip:
                description: Zip code
                type: string
              place:
                description: City/Place
                type: string
              country:
                description: |
                  Country (ISO 3166-1 alpha-2 Code) like "CH" / "DE" / "AT"
                  https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
                type: string
              externalId:
                description: External Id
                type: integer
                nullable: true
              sendingRule:
                description: Invoice sending rule. Default is defined via admin center setting
                nullable: true
                type: string
                enum: [ 'email', 'post' ]
              sendingRuleAddresses:
                description: E-Mail addresses for invoice sending. Only useful with sendingRule "email".
                nullable: true
                type: array
                items:
                  type: string
              softDeleted:
                description: If this address should be treated as deleted.
                example: false
                type: boolean
                default: false
        mainAddress:
          description: Reference to the main address for this customer
          type: object
          additionalProperties: false
          required: [ externalCrmId ]
          nullable: true
          properties:
            externalCrmId:
              description: External CRM Id for referencing the address.
              type: string
              nullable: true
        contacts:
          description: Customer contacts
          type: array
          items:
            type: object
            additionalProperties: false
            required: [ externalCrmId, peopleGender, peopleLastname, peopleName, peoplePhone, peopleNatel, peopleEmail, peopleStatus, lead, jobFunctions, pipelineStatus ]
            properties:
              externalCrmId:
                description: External CRM Id for referencing the contact
                type: string
              peopleGender:
                description: Gender. "M" = male, "F" = female, "D" = divers
                type: string
                enum: [ 'M', 'F', 'D' ]
              peopleLastname:
                description: Lastname
                type: string
              peopleName:
                description: Surname
                type: string
              peoplePhone:
                description: Phone Number
                type: string
              peopleNatel:
                description: Mobile Number
                type: string
              peopleEmail:
                description: E-Mail
                type: string
              peopleStatus:
                description: Status active/inactive. "A" = active. "N" = not active.
                type: string
                default: A
                enum: [ 'A', 'N' ]
              lead:
                description: |
                  Contact is: 
                  * `true`: contact is marked as lead. 
                  * `false`: contact is not marked as lead.
                type: boolean
                default: false
              jobFunctions:
                description: This is an array of objects for historic reasons, but only 1 object is supported with lang 'de'.
                type: array
                items:
                  type: object
                  additionalProperties: false
                  required: [ lang, function ]
                  properties:
                    lang:
                      description: Language in which the function is used (deprecated). Use "de" always
                      type: string
                      enum: [ 'de' ]
                    function:
                      description: The function name
                      type: string
              pipelineStatus:
                description: Pipeline statuses depend on a type (e.g. contact, or customer) and cannot be shared between types. A pipeline status can help to process leads and/or contacts and divide them into individual stages. The pipeline status is defined in the CRM Part of Admin Center.
                type: object
                nullable: true
                additionalProperties: false
                required: [ externalCrmId ]
                properties:
                  externalCrmId:
                    description: This refers to the pipeline externalCrmId defined in admin center.
                    type: string
                    nullable: true
        tags:
          description: Customer tags
          type: array
          items:
            type: object
            additionalProperties: false
            required: [ externalCrmId, name ]
            properties:
              externalCrmId:
                description: External CRM Id for referencing the tag
                type: string
                nullable: true
              name:
                description: Name of the tag
                type: string
        references:
          description: Customer references
          type: array
          items:
            type: object
            additionalProperties: false
            required: [ externalCrmId, referenceType, referenceValue ]
            properties:
              externalCrmId:
                description: External CRM Id for referencing the customer reference
                type: string
              referenceType:
                description: Type of the reference
                type: string
              referenceValue:
                description: Value of the reference
                type: string
        consultants:
          description: Customer consultants
          type: array
          items:
            type: object
            additionalProperties: false
            required: [ email ]
            properties:
              email:
                description: E-Mail address of consultant
                type: string
        paymentTerm:
          description: Payment term for customer
          type: object
          additionalProperties: false
          required: [ externalCrmId ]
          properties:
            externalCrmId:
              description: External CRM Id for referencing the payment term
              type: string
            days:
              description: Amount of days until the invoice has to be paid
              type: integer
            name:
              description: Name of the payment term
              type: string
            cashDiscountDays:
              description: How many days that a cash discount (skonto) can be applied
              type: integer
              nullable: true
            cashDiscountPercent:
              description: Percentage of cash discount (skonto) that can be applied
              type: number
              nullable: true
            billingPhrases:
              description: Text to print on invoice in different languages
              type: object
              nullable: true
              properties:
                de:
                  description: German text
                  type: string
                en:
                  description: English text
                  type: string
                fr:
                  description: French text
                  type: string
                it:
                  description: Italian text
                  type: string
    Campaign:
      description: A goTom campaign
      type: object
      properties:
        name:
          description: Corresponds with the field "Kampagne"
          type: string
        status:
          description: Corresponds with the field "Status"
          type: string
          default: booking
          enum: [booking, reservation]
        bookingDate:
          description: Corresponds with the field "Buchungsdatum"
          type: string
          format: date
        campaignTypeId:
          description: Corresponds with the field "Kampagnentyp"
          type: integer
          example: 1
        campaignTypeReference:
          description: Corresponds with the field "Kampagnentyp Referenz"
          type: string
        customer:
          description: Corresponds with the field "Kunde"
          allOf:
            - $ref: "#/components/schemas/ContactRef"
        intermediator:
          description: Corresponds with the field "Vermittler"
          allOf:
            - $ref: "#/components/schemas/ContactRef"
        agency:
          description: Corresponds with the field "Agentur"
          allOf:
            - $ref: "#/components/schemas/ContactRef"
        note:
          description: Corresponds with the Field "Bemerkungen"
          type: string
          nullable: true
        noteInternal:
          description: Corresponds with the Field "Interne Bemerkungen"
          type: string
        noteReservation:
          description: Corresponds with the Field "Reservationsabklärung"
          type: string
        pdfInvoiceWithAttachment:
          description: Corresponds to the "Dokumente" field. If true, the invoice will be created with an appendix e.g. the Order Confirmation; if false, it will be created without one, as default it would be true.
          type: boolean
          default: true

    CampaignUpdate:
      allOf:
        - $ref: "#/components/schemas/Campaign"
        - $ref: "#/components/schemas/CampaignSalesMixin"

    FlightUpdate:
      allOf:
        - $ref: "#/components/schemas/Flight"
        - type: object
          properties:
            adServerPushChanges:
              type: object
              properties:
                adServerId:
                  type: string
                types:
                  type: array
                  items:
                    type: string
                    enum:
                      - runtime
                      - units
                      - other
                      - placements
                remarks:
                  type: string

    FlightDiscount:
      type: object
      properties:
        flightExternalId:
          description: this is the external id of the flight associated with this flight discount
          type: string
          example: flightExternalId12345
        externalId:
          description: this is the external id of this flight discount
          type: string
          example: flightDiscountExternalId1234
        amountPercent:
          type: number
          example: 33.33
        amountSum:
          type: number
          example: 0
      oneOf:
        - required:
            - amountPercent
        - required:
            - amountSum

    CampaignDiscountWrite:
      type: object
      properties:
        name:
          description: This name will appear e.g. in finance documents
          type: string
          example: "Great discount for john doe"
        externalId:
          type: string
          example: "campaignDiscount12345"
      required:
        - name
        - externalId

    CampaignDiscountRead:
      type: object
      properties:
        flightDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/FlightDiscountRead"
        name:
          type: string
          example: "Great discount for john doe"
        externalId:
          description: "Either `externalId` is set or `entityId` if no `externalId` was found. `entityId` is the internal goTom Id that is used in the goTom frontend."
          type: string
          nullable: true
          example: "campaignDiscount12345"
        entityId:
          description: "Either `externalId` is set or `entityId` if no `externalId` was found. `entityId` is the internal goTom Id that is used in the goTom frontend."
          type: number
          nullable: true
          example: null

    CampaignDiscountsRead:
      type: object
      properties:
        campaignDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/CampaignDiscountRead"

    FlightDiscountRead:
      type: object
      properties:
        flightExternalId:
          type: string
          example: flightExternalId1234
          nullable: true
        externalId:
          type: string
          example: flightDiscountExternalId1234
          description: "Either `externalId` is set or `entityId` if no `externalId` was found. `entityId` is the internal goTom Id that is used in the goTom frontend."
          nullable: true
        entityId:
          description: "Either `externalId` is set or `entityId` if no `externalId` was found. `entityId` is the internal goTom Id that is used in the goTom frontend."
          type: number
          nullable: true
          example: null
        amountPercent:
          type: number
          format: float
          example: 20.5
        amountSum:
          type: number
          format: float
          example: 0

    FlightDiscountCreate:
      properties:
        flightExternalId:
          type: string
        externalId:
          type: string
        amountPercent:
          description: "Note: The schemas used for creating and updating flight discounts differ for `amountPercent` and `amountSum`."
          type: number
          format: float
          example: 20.5
          nullable: true
        amountSum:
          description: "Note: The schemas used for creating and updating flight discounts differ for `amountPercent` and `amountSum`."
          type: number
          format: float
          example: null
          nullable: true
      required:
        - flightExternalId
        - externalId
        - amountPercent
        - amountSum

    FlightDiscountUpdate:
      type: object
      description: When updating, only one of `amountSum` or `amountPercent` should be provided — never both.
      oneOf:
        - required: [amountSum]
          properties:
            amountSum:
              description: Must not be null. When updating, only one of `amountSum` or `amountPercent` should be provided — never both.
              type: number
              format: float
              example: 5.5
              nullable: false
        - required: [amountPercent]
          properties:
            amountPercent:
              description: Must not be null. When updating, only one of `amountSum` or `amountPercent` should be provided — never both.
              type: number
              format: float
              nullable: false
              example: 33.33

    PrimaryKeysRead:
      description: A primary key, item name list
      type: object
      properties:
        pagination:
          type: object
          properties:
            totalItems:
              type: integer
              example: 33
            perPage:
              type: integer
              example: 1000
            currentPage:
              type: integer
              example: 1
            lastPage:
              type: integer
              example: 1
            nextPageUrl:
              description: if there are too many items retrieved to fit in one response, you can retrieve the remaining by using the next URL to access the next page
              example: https://demo.gotom.io/app-api/primary-keys/tarifId?page=2
              type: string
              nullable: true
        items:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                description: The primary key of the item. This is always an integer except for entity `adServer`, where it is a string
                oneOf:
                  - type: integer
                  - type: string
              name:
                description: The associated name of the primary key. For example, the name of the channel.
                type: string
                example: Desktop
              email:
                description: The associated email of the primary key or User, this field is shown only if primary key for user entity is requested.
                type: string
                example: if_user_entity_given@gotom.io
              isDefault:
                description: Whether the flightPositionType is the default value or not, only for flightPositionType
                type: boolean
                example: true

    CampaignCreate:
      required:
        - externalId
        - status
        - bookingDate
        - customer
      allOf:
        - $ref: "#/components/schemas/Campaign"
        - $ref: "#/components/schemas/CampaignSalesMixin"
        - type: object
          properties:
            externalId:
              type: string
            currency:
              description: Corresponds with the field "Währung". Currency of the campaign (the instance default is used if none is supplied)
              type: string

    CampaignRead:
      allOf:
        - $ref: "#/components/schemas/CampaignCreate"
        - type: object
          properties:
            campaignId:
              type: integer
              description: goTom ID of the Campaign (Sometimes known as Booking ID)

            salesSupportId:
              nullable: true
              description: Correspons with the field "Innendienst"
              type: integer
              example: 42

            salesSupportEmail:
              nullable: true
              description: E-Mail of the sales support user ("Innendienst")
              type: string
              example: sales-support@acme-corp.ch

            salesId:
              nullable: true
              description: Corresponds with the field "Verkauf"
              type: integer
              example: 23

            salesEmail:
              nullable: true
              description: E-Mail of the sales user ("Verkauf")
              type: string
              example: sales@acme-corp.ch

            campaignTypeId:
              nullable: true
              description: goTom ID of the Campaign Type on the Campaign
              type: integer
              example: 1

            campaignTypeReference:
              nullable: true
              description: Reference for Campaign Type
              type: string

            commissionStatus:
              description: Corresponds with the field "Kommissions-Abrechnung"
              type: integer
              example: 4

            flights:
              type: array
              items:
                $ref: "#/components/schemas/FlightRead"


    CampaignSalesMixin:
      type: object
      properties:
        salesSupportId:
          description: Correspons with the field "Innendienst". Only `salesSupportId` or `salesSupportEmail` should be provided.
          type: integer
          example: null
        salesSupportEmail:
          description: Correspons with the field "Innendienst". Only `salesSupportId` or `salesSupportEmail` should be provided.
          type: string
          example: sales-support@acme-corp.ch
        salesId:
          description: Corresponds with the field "Verkauf". Only `salesId` or `salesEmail` should be provided.
          type: integer
          example: 23
        salesEmail:
          description: Corresponds with the field "Verkauf".  Only `salesId` or `salesEmail` should be provided.
          type: string
          example: null

    FlightLineItemId:
      description: AdServer LineItem Connection
      type: object
      properties:
        strategyId:
          description: Corresponds to the adServer strategy
          type: string
        adserverId:
          description: Corresponds to the lineItemId of flight status
          type: integer

    Flight:
      description: A goTom Flight
      type: object
      properties:
        runtime:
          type: object
          description: Start and Enddate of the flight
          properties:
            start:
              type: object
              allOf:
                - $ref: "#/components/schemas/DateTimeComponents"
            end:
              type: object
              allOf:
                - $ref: "#/components/schemas/DateTimeComponents"

        tarifId:
          description: Corresponds with the field "Tarif"
          type: integer
        mediaId:
          description: Corresponds with the field "Medium"
          type: integer
        extraPriceLevelId:
          description: Corresponds with the field "Extra Preis Ebene"
          type: integer

        platformId:
          description: Corresponds with the field "Platform"
          type: integer

        channelId:
          description: Corresponds with the field "Channel"
          type: integer

        advertisingId:
          description: Corresponds with the field "Werbemittel"
          type: integer

        priceTypeId:
          description: Corresponds with the field "Preistyp"
          type: integer

        flightPositionTypeName:
          description: |
            The `flightPositionTypeName`, which can be retrieved via the primary key endpoint.
            Note that even when this value is set to `null`, the application may use a default value, as shown in the primary key endpoint.
      
            If no value is set, the read response will include the default `flightPositionTypeName`.
            Therefore, setting this field to `null` causes the flight to fall back to the default value.
          type: string
          nullable: true

        units:
          description: Corresponds with the field "Anzahl Einheiten"
          type: integer

        bruttoPriceUnit:
          description: |
            Corresponds with the field "Finaler Bruttopreis Einheit". 
            Can be a number (ie 15.20), or the string "loadFromRate" (will autoload the price from the rate sheet). 
            Can be omitted when updating a flight (existing bruttoPriceUnit will stay the same)
          oneOf:
            - type: string
            - type: number

        advertisingStatus:
          description: Corresponds with the field "WM Status"
          type: string
          enum:
            - open
            - received
            - integrated

        note:
          description: Corresponds with the field "Bemerkungen"
          type: string

        noteInternal:
          description: Corresponds with the field "Interne Bemerkungen"
          type: string

        noteBilling:
          description: Corresponds with the field "Faktura Bemerkungen"
          type: string

        adServerId:
          description: Corresponds with the field "AdServer"
          type: string

        keyValueSets:
          description: Corresponds with the field "Targeting Configuration -> Key / Values"
          type: array
          items:
            $ref: '#/components/schemas/KeyValueSet'

        geoTargetingByZip:
          description: Corresponds with the field "Targeting Configuration -> Geo Targeting -> PLZ"
          type: object
          properties:
            countryId:
              type: string
              enum:
                - US
                - CA
                - DE
                - FR
                - GB
                - IN
            zipCodes:
              description: Comma separated list of zip codes
              type: string

    FlightCreate:
      required:
        - externalId
        - adServerId
        - runtime
        - tarifId
        - mediaId
        - platformId
        - channelId
        - advertisingId
        - priceTypeId
        - units
        - bruttoPriceUnit
      allOf:
        - $ref: "#/components/schemas/Flight"
        - type: object
          properties:
            externalId:
              type: string

    FlightRead:
      allOf:
        - $ref: "#/components/schemas/FlightCreate"
      properties:
        flightPositionTypeName:
          description: Notice that even when setting to null, a default value might be used in the app as seen in the primary key endpoint. The flight read returns the default value.
          type: string
          nullable: true
    FlightSublines:
      description: Represents the sublines for a flight (only for network flights)
      type: object
      properties:
        sublines:
          type: array
          items:
            properties:
              platformId:
                description: Platform of the network
                type: integer
              percentage:
                description: Share of the platform in percent (42.5% = 42.5).
                example: 42.5
                type: number
              note:
                description: Subline note for the Platform.
                example: Remark for this FlightSubline
                type: string
    FlightCommission:
      description: Represents the commission values for a flight
      type: object
      properties:
        bkPercent:
          description: Percentage of the BK (only set either percentage or amount)
          type: number
          example: 5.0
        bkAmount:
          description: Amount of the BK (only set either percentage or amount)
          type: number
          example: 120.0
        vmkType:
          description: The type of the intermediator commission, this value will update on campaign level
          enum: [ 'VMK', 'DBE' ]
          type: string
        vmkPercent:
          description: Percentage of the vmk (only set either percentage or amount)
          type: number
          example: 12.0
        vmkAmount:
          description: Amount of the vmk (only set either percentage or amount)
          type: number
          example: 500.0

    DateTimeComponents:
      description: Represents date and time (timezone is implicitly always the "system timezone" of goTom)
      required:
        - date
      properties:
        date:
          type: string
          format: date
        time:
          description: Time without seconds in the format HH:MM
          type: string
          example: 12:34
          pattern: '^\d{2}:\d{2}$'

    AnyValue:
      description: Can be any value - string, number, boolean, array or object.
      nullable: true
      anyOf:
        - type: string
        - type: number
        - type: integer
        - type: boolean
        - type: array
          items: {}
        - type: object

    InternalServerErrorResponse:
      properties:
        message:
          type: string
          example: Internal Server Error

    CustomerFoundResponse:
      additionalProperties: false
      properties:
        ok:
          type: boolean
          enum: [true]
          example: true
          description: Always `true` for this response
        customer:
          additionalProperties: false
          $ref: '#/components/schemas/CustomerRead'
      required:
        - ok
        - customer

    NoCustomerFoundResponse:
      properties:
        ok:
          type: boolean
          enum: [false]
          example: false
          description: Always `false` for this response
        message:
          type: string
          example: Customer not found with externalCrmId example1234ab
        customer:
          nullable: true
          enum: [null]
          description: Always `null` for this response
      required:
        - ok
        - message
        - customer

    ConstraintViolationResponse:
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ConstraintViolationItem'

    ConstraintViolationItem:
      properties:
        propertyPath:
          type: string
        message:
          type: string
        invalidValue:
          $ref: '#/components/schemas/AnyValue'
        cause:
          $ref: '#/components/schemas/AnyValue'
        code:
          type: string

    Document:
      properties:
        name:
          type: string
          example: Test.pdf
        content:
          type: string
          format: byte
          description: base64 encoded file content

    ArchiveStatus:
      properties:
        setIsArchived:
          type: boolean
          example: true
          description: true to archive, false to un-archive / activate

    CommissionStatus:
      properties:
        commissionStatus:
          type: integer
          enum: [0, 2, 3, 4]
          example: 4
          description: >
              Commission status:
               * `0` - Commission direct
               * `2` - AC direct, Agency rebate indirect (accrual)
               * `3` - AC separate, Agency rebate indirect (accrual)
               * `4` - Agency rebate separate

    KeyValueSet:
      properties:
        adServerId:
          type: string
        keyValues:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'

    KeyValue:
      properties:
        id:
          description: AdServer Id of KeyValue or "audiencesegment" for an Audience Segment
          type: string
        label:
          type: string
        comparisonOperator:
          description: 0 = equal, 1 = unequal
          type: integer
          enum:
            - 0
            - 1
        values:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueValue'

    KeyValueValue:
      properties:
        id:
          description: AdServer Id of KeyValue/Audience Segment Value or "custom_{value}" for freetext values. For example the freetext value "15" has to be "custom_15"
          type: string
        label:
          type: string

  parameters: # we are still on components level here
    ParamCustomerExternalCrmId:
      in: path
      name: customerCrmExternalId
      schema:
        type: string
      required: true
      example: example-customer1234
      description: "External CRM ID of a customer."
    ParamCampaignExternalId:
      in: path
      name: campaignExternalId
      schema:
        type: string
      required: true
      example: example-campaign
      description: "External ID of a campaign. See: [Good and Bad External IDs](/docs/good-and-bad-external-ids)"
    ParamCampaignDiscountExternalId:
      in: path
      name: cDiscountEID
      schema:
        type: string
      required: true
      example: campaignDiscountExternalId1234
      description: "External ID of a campaign discount. See: [Good and Bad External IDs](/docs/good-and-bad-external-ids)"
    ParamFlightDiscountExternalId:
      in: path
      name: fDiscountEID
      schema:
        type: string
      required: true
      example: flightDiscountExternalId1234
      description: "External ID of a flight discount. See: [Good and Bad External IDs](/docs/good-and-bad-external-ids)"
    ParamFlightExternalId:
      in: path
      name: flightExternalId
      example: example-flight
      schema:
        type: string
      required: true
      description: "External ID of a flight. See: [Good and Bad External IDs](/docs/good-and-bad-external-ids)"

  responses:
    InternalServerErrorDefault:
      description: If your request broke our code. Send us your request-document to reproduce the error and we'll fix it.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerErrorResponse'
    SumUpCaseNotImplemented:
      description: >
        * Code: `4c396abe-92c8-45ae-a3af-9baa4b76bbda` - Api discount manipulation currently not supported for sum up strategy.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConstraintViolationResponse'
